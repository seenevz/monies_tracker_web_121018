c
user
c
expense.id
expense
@personal_expenses
c
@personal_expenses
@user.personal_expenses
@perosnal_expenses
@user
c
params
c
exit
PersonalExpense.create(persona_exp_params)
params
c
 params.require(:personal_expense).permit(:name, :amount, :user_id, category_attributes: [:name])
params
exit
params
params.require(:personal_expense).permit(:name, :amount, :user_id, category_attributes: [:name])
c
@personal_expense
c
params
c
@user.id
@user
c
params
c
params
exit
params
c
params
c
params
exit
@personal_expense
c
@personal_expense.category.build
@personal_expense.category
@personal_expense
exit
c
params
@personal_expense
c
params
rails routes
exit
@personal_expense
@personam_expense
c
exit
params
c
params
exit
params
c
params
c
@personal_expense.user
c
params
c
params
c
params[:user_id]
params
c
params
c
params
c
params
c
((today - birthday).to_i) / 365
exit
self
self.dob
birthday
today
(today - birthday)
(today - birthday).to_i
(today - birthday).to_i)
((today - birthday).to_i) / 365
exit
wallets
exit
wallets
c
PersonalExpense.all
n
PersonalExpense.all
n
PersonalExpense.create(pers_expenses[0])
PersonalExpense.all
Category.all
User.all
c
pe1.errors.full_messages
pe1.errors
pe1 = PersonalExpense.create(pers_expenses[0])
_.errors.full_messages
PersonalExpense.create(pers_expenses[0])
PersonalExpense.all
Category.all
User.all
c
pers_expenses[0]
pers_expenses
c
users
categories
exit
categories
exit
pers_expenses
exit
pers_expenses
exit
pers_expenses
c
exit
rand(300)
exit
Date.today
self.dob
exit
Category.create(categories)
User.create(users)
exit
User.create(users)
exit
User.create(users)
categories
users
exit
user
exit
user
exit
user[:username] = Faker::Internet.username
user[username:] = Faker::Internet.username
name = Faker::Internet.username
user[username: (Faker::Internet.username)]
user
user[username: Faker::Internet.username]
user
exit
name = Faker::Name.first_name
user
exit
user
